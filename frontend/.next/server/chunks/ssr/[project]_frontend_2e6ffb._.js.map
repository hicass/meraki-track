{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/frontend/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/frontend/src/app/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/src/app/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/frontend/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/frontend/src/app/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/src/app/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/frontend/src/utils/api/send-request.ts"],"sourcesContent":["'use server';\nimport { cookies } from 'next/headers';\n\ninterface Method {\n  GET: 'GET';\n  POST: 'POST';\n  PUT: 'PUT';\n  DELETE: 'DELETE';\n}\n\nexport default async function sendRequest(\n  path: string,\n  method: keyof Method,\n  body?: any,\n  timeout: number = 9000\n) {\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n  let cookieString = '';\n\n  if (process.env.NODE_ENV !== 'test') {\n    const reqCookies = await cookies();\n    cookieString = reqCookies\n      .getAll()\n      .map(({ name, value }) => `${name}=${value}`)\n      .join('; ');\n  }\n\n  try {\n    const url = `${process.env.NEXT_PUBLIC_SERVER_URL}/${path}`;\n\n    const res = await fetch(url, {\n      method: method,\n      body: JSON.stringify(body),\n      signal: controller.signal,\n      headers: {\n        'Content-Type': 'application/json',\n        Cookie: cookieString,\n      },\n    });\n\n    return res.json();\n  } catch (error) {\n    console.log(error);\n    throw new Error('Bad Request');\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n"],"names":[],"mappings":";;;;;AACA;;;;;AASe,eAAe,uCAAS,GAAT,YAC5B,IAAY,EACZ,MAAoB,EACpB,IAAU,EACV,UAAkB,IAAI;IAEtB,MAAM,aAAa,IAAI;IACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAK,IAAI;IAEvD,IAAI,eAAe;IAEnB,wCAAqC;QACnC,MAAM,aAAa,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;QAC/B,eAAe,WACZ,MAAM,GACN,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAK,GAAG,KAAK,CAAC,EAAE,OAAO,EAC3C,IAAI,CAAC;IACV;IAEA,IAAI;QACF,MAAM,MAAM,6DAAsC,CAAC,EAAE,MAAM;QAE3D,MAAM,MAAM,MAAM,MAAM,KAAK;YAC3B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;YACrB,QAAQ,WAAW,MAAM;YACzB,SAAS;gBACP,gBAAgB;gBAChB,QAAQ;YACV;QACF;QAEA,OAAO,IAAI,IAAI;IACjB,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC;QACZ,MAAM,IAAI,MAAM;IAClB,SAAU;QACR,aAAa;IACf;AACF;;;IAvC8B;;AAAA,+OAAA"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}