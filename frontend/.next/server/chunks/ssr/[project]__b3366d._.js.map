{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/frontend/src/utils/api/send-request.ts"],"sourcesContent":["'use server';\nimport { cookies } from 'next/headers';\n\ninterface Method {\n  GET: 'GET';\n  POST: 'POST';\n  PUT: 'PUT';\n  DELETE: 'DELETE';\n}\n\nexport default async function sendRequest(\n  path: string,\n  method: keyof Method,\n  body?: any,\n  timeout: number = 9000\n) {\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n  let cookieString = '';\n\n  if (process.env.NODE_ENV !== 'test') {\n    const reqCookies = await cookies();\n    cookieString = reqCookies\n      .getAll()\n      .map(({ name, value }) => `${name}=${value}`)\n      .join('; ');\n  }\n\n  try {\n    const url = `${process.env.NEXT_PUBLIC_SERVER_URL}/${path}`;\n\n    const res = await fetch(url, {\n      method: method,\n      body: JSON.stringify(body),\n      signal: controller.signal,\n      headers: {\n        'Content-Type': 'application/json',\n        Cookie: cookieString,\n      },\n    });\n\n    return res.json();\n  } catch (error) {\n    console.log(error);\n    throw new Error('Bad Request');\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n"],"names":[],"mappings":";;;;;qDAU8B"}},
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/frontend/src/features/dashboard/job-applications/api/create-job-application.ts"],"sourcesContent":["import sendRequest from \"@/utils/api/send-request\";\nimport { JobApplication } from \"types/jobApplication\";\n\nconst BASE_URL = 'api/job-applications';\n\nexport function createJobApp(newJobAppInfo: JobApplication) {\n  return sendRequest(`${BASE_URL}/new`, 'POST', newJobAppInfo);\n}\n"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,WAAW;AAEV,SAAS,aAAa,aAA6B;IACxD,OAAO,CAAA,GAAA,kJAAA,CAAA,UAAW,AAAD,EAAE,GAAG,SAAS,IAAI,CAAC,EAAE,QAAQ;AAChD"}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/frontend/src/features/dashboard/job-applications/components/JobApplicationForm.tsx"],"sourcesContent":["import { FC } from 'react';\n\nimport { FormSubmitHandler, OnChangeHandler } from '@/types/handlers';\nimport { JobApplication } from '@/types/jobApplication';\n\ninterface JobApplicationFormProps extends JobApplication {\n  handleFormChange: OnChangeHandler;\n  handleFormSubmit: FormSubmitHandler;\n}\n\nconst JobApplicationForm: FC<JobApplicationFormProps> = ({\n  handleFormChange,\n  handleFormSubmit,\n  companyName,\n}) => {\n  return (\n    <form\n      className=\"flex flex-col gap-2 p-2 bg-white text-black\"\n      onSubmit={handleFormSubmit}\n    >\n      <label>Company Name:</label>\n      <input\n        type=\"text\"\n        name=\"companyName\"\n        value={companyName}\n        onChange={handleFormChange}\n        required\n      />\n      <button className=\"bg-gray-200 p-2 hover:bg-gray-300\" type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default JobApplicationForm;\n"],"names":[],"mappings":";;;;;AAUA,MAAM,qBAAkD,CAAC,EACvD,gBAAgB,EAChB,gBAAgB,EAChB,WAAW,EACZ;IACC,qBACE,8OAAC;QACC,WAAU;QACV,UAAU;;0BAEV,8OAAC;0BAAM;;;;;;0BACP,8OAAC;gBACC,MAAK;gBACL,MAAK;gBACL,OAAO;gBACP,UAAU;gBACV,QAAQ;;;;;;0BAEV,8OAAC;gBAAO,WAAU;gBAAoC,MAAK;0BAAS;;;;;;;;;;;;AAK1E;uCAEe"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { FC, useState } from 'react';\n\nimport { useAuth } from '@/context/AuthContext';\nimport { createJobApp } from '@/features/dashboard/job-applications/api/create-job-application';\nimport JobApplicationForm from '@/features/dashboard/job-applications/components/JobApplicationForm';\n\nconst DashboardPage: FC = () => {\n  const { session } = useAuth();\n  const userName = session?.user?.user_metadata.name;\n  const [newJobAppInfo, setNewJobAppInfo] = useState({\n    companyName: '',\n  });\n\n  function handleFormChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewJobAppInfo({\n      ...newJobAppInfo,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleFormSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    await createJobApp(newJobAppInfo);\n  }\n\n  return (\n    <section className=\"border flex flex-col items-center justify-center gap-10 min-h-screen\">\n      <h1 className=\"text-4xl font-bold\">\n        Welcome to your dashboard {userName}\n      </h1>\n\n      <JobApplicationForm\n        handleFormChange={handleFormChange}\n        handleFormSubmit={handleFormSubmit}\n        {...newJobAppInfo}\n      />\n    </section>\n  );\n};\n\nexport default DashboardPage;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AANA;;;;;;AAQA,MAAM,gBAAoB;IACxB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,UAAO,AAAD;IAC1B,MAAM,WAAW,SAAS,MAAM,cAAc;IAC9C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjD,aAAa;IACf;IAEA,SAAS,iBAAiB,CAAsC;QAC9D,iBAAiB;YACf,GAAG,aAAa;YAChB,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QACjC;IACF;IAEA,eAAe,iBAAiB,CAAmC;QACjE,EAAE,cAAc;QAChB,MAAM,CAAA,GAAA,sMAAA,CAAA,eAAY,AAAD,EAAE;IACrB;IAEA,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;;oBAAqB;oBACN;;;;;;;0BAG7B,8OAAC,oMAAA,CAAA,UAAkB;gBACjB,kBAAkB;gBAClB,kBAAkB;gBACjB,GAAG,aAAa;;;;;;;;;;;;AAIzB;uCAEe"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/node_modules/next/src/client/app-call-server.ts"],"sourcesContent":["import { startTransition, useCallback } from 'react'\nimport {\n  ACTION_SERVER_ACTION,\n  type ReducerActions,\n  type ServerActionDispatcher,\n} from './components/router-reducer/router-reducer-types'\n\nlet globalServerActionDispatcher = null as ServerActionDispatcher | null\n\nexport function useServerActionDispatcher(\n  dispatch: React.Dispatch<ReducerActions>\n) {\n  const serverActionDispatcher: ServerActionDispatcher = useCallback(\n    (actionPayload) => {\n      startTransition(() => {\n        dispatch({\n          ...actionPayload,\n          type: ACTION_SERVER_ACTION,\n        })\n      })\n    },\n    [dispatch]\n  )\n  globalServerActionDispatcher = serverActionDispatcher\n}\n\nexport async function callServer(actionId: string, actionArgs: any[]) {\n  const actionDispatcher = globalServerActionDispatcher\n\n  if (!actionDispatcher) {\n    throw new Error('Invariant: missing action dispatcher.')\n  }\n\n  return new Promise((resolve, reject) => {\n    actionDispatcher({\n      actionId,\n      actionArgs,\n      resolve,\n      reject,\n    })\n  })\n}\n"],"names":["callServer","useServerActionDispatcher","globalServerActionDispatcher","dispatch","serverActionDispatcher","useCallback","actionPayload","startTransition","type","ACTION_SERVER_ACTION","actionId","actionArgs","actionDispatcher","Error","Promise","resolve","reject"],"mappings":";;;;;;;;;;;;;;;IA0BsBA,UAAU,EAAA;eAAVA;;IAjBNC,yBAAyB,EAAA;eAAzBA;;;uBAT6B;oCAKtC;AAEP,IAAIC,+BAA+B;AAE5B,SAASD,0BACdE,QAAwC;IAExC,MAAMC,yBAAiDC,CAAAA,GAAAA,OAAAA,WAAW,EAChE,CAACC;QACCC,CAAAA,GAAAA,OAAAA,eAAe,EAAC;YACdJ,SAAS;gBACP,GAAGG,aAAa;gBAChBE,MAAMC,oBAAAA,oBAAoB;YAC5B;QACF;IACF,GACA;QAACN;KAAS;IAEZD,+BAA+BE;AACjC;AAEO,eAAeJ,WAAWU,QAAgB,EAAEC,UAAiB;IAClE,MAAMC,mBAAmBV;IAEzB,IAAI,CAACU,kBAAkB;QACrB,MAAM,IAAIC,MAAM;IAClB;IAEA,OAAO,IAAIC,QAAQ,CAACC,SAASC;QAC3BJ,iBAAiB;YACfF;YACAC;YACAI;YACAC;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/node_modules/next/src/client/app-find-source-map-url.ts"],"sourcesContent":["const basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\nconst pathname = `${basePath}/__nextjs_source-map`\n\nexport const findSourceMapURL =\n  process.env.NODE_ENV === 'development'\n    ? function findSourceMapURL(filename: string): string | null {\n        if (filename === '') {\n          return null\n        }\n\n        if (\n          filename.startsWith(document.location.origin) &&\n          filename.includes('/_next/static')\n        ) {\n          // This is a request for a client chunk. This can only happen when\n          // using Turbopack. In this case, since we control how those source\n          // maps are generated, we can safely assume that the sourceMappingURL\n          // is relative to the filename, with an added `.map` extension. The\n          // browser can just request this file, and it gets served through the\n          // normal dev server, without the need to route this through\n          // the `/__nextjs_source-map` dev middleware.\n          return `${filename}.map`\n        }\n\n        const url = new URL(pathname, document.location.origin)\n        url.searchParams.set('filename', filename)\n\n        return url.href\n      }\n    : undefined\n"],"names":["findSourceMapURL","basePath","process","env","__NEXT_ROUTER_BASEPATH","pathname","NODE_ENV","filename","startsWith","document","location","origin","includes","url","URL","searchParams","set","href","undefined"],"mappings":";;;;+BAGaA,oBAAAA;;;eAAAA;;;AAHb,MAAMC,WAAWC,QAAQC,GAAG,CAACC,sBAAsB,MAAI;AACvD,MAAMC,WAAY,KAAEJ,WAAS;AAEtB,MAAMD,mBACXE,QAAQC,GAAG,CAACG,QAAQ,KAAK,cACrB,SAASN,iBAAiBO,QAAgB;IACxC,IAAIA,aAAa,IAAI;QACnB,OAAO;IACT;IAEA,IACEA,SAASC,UAAU,CAACC,SAASC,QAAQ,CAACC,MAAM,KAC5CJ,SAASK,QAAQ,CAAC,kBAClB;QACA,kEAAkE;QAClE,mEAAmE;QACnE,qEAAqE;QACrE,mEAAmE;QACnE,qEAAqE;QACrE,4DAA4D;QAC5D,6CAA6C;QAC7C,OAAQ,KAAEL,WAAS;IACrB;IAEA,MAAMM,MAAM,IAAIC,IAAIT,UAAUI,SAASC,QAAQ,CAACC,MAAM;IACtDE,IAAIE,YAAY,CAACC,GAAG,CAAC,YAAYT;IAEjC,OAAOM,IAAII,IAAI;AACjB,IACAC","ignoreList":[0]}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-server-dom-turbopack-client-edge.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactServerDOMTurbopackClientEdge\n"],"names":["module","exports","require","vendored","ReactServerDOMTurbopackClientEdge"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///Users/cass/code/meraki-track/frontend/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,4JAAiC,EAC7CL,qBAAqB","ignoreList":[0]}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}